[
  {
    "MetricName": "High Request Latency Alert",
    "sourceQuery": "requests | where timestamp > ago(5m) | where name contains 'chatbot_message' | summarize avg(duration) by bin(timestamp, 1m)",
    "Measure": "avg_duration",
    "AggregationType": "Average",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 2000,
    "EvaluationFrequency": "PT1M",
    "Severity": 2,
    "ActionGroups": ["chatbot-critical-alerts", "on-call-engineers"]
  },
  {
    "MetricName": "High Error Rate Alert",
    "sourceQuery": "requests | where timestamp > ago(5m) | summarize error_rate = todouble(countif(resultCode >= 400)) / todouble(count()) * 100 by bin(timestamp, 1m)",
    "Measure": "error_rate",
    "AggregationType": "Average",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 5.0,
    "EvaluationFrequency": "PT1M",
    "Severity": 1,
    "ActionGroups": ["chatbot-critical-alerts", "on-call-engineers", "engineering-leads"]
  },
  {
    "MetricName": "External Dependency Failure Alert",
    "sourceQuery": "dependencies | where timestamp > ago(5m) | where name in ('get_weather_data', 'get_news_data', 'get_stock_data') | summarize failure_rate = todouble(countif(success == false)) / todouble(count()) * 100 by bin(timestamp, 1m)",
    "Measure": "failure_rate",
    "AggregationType": "Average",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 20.0,
    "EvaluationFrequency": "PT1M",
    "Severity": 2,
    "ActionGroups": ["chatbot-dependency-alerts", "platform-team"]
  },
  {
    "MetricName": "Low Request Volume Alert",
    "sourceQuery": "requests | where timestamp > ago(10m) | where name !contains 'healthcheck' | summarize request_count = count() by bin(timestamp, 5m)",
    "Measure": "request_count",
    "AggregationType": "Average",
    "AggregationGranularity": "PT5M",
    "Operator": "LessThan",
    "Threshold": 5,
    "EvaluationFrequency": "PT5M",
    "Severity": 3,
    "ActionGroups": ["chatbot-monitoring-alerts"]
  },
  {
    "MetricName": "Exception Spike Alert",
    "sourceQuery": "exceptions | where timestamp > ago(5m) | summarize exception_count = count() by bin(timestamp, 1m)",
    "Measure": "exception_count",
    "AggregationGranularity": "PT1M",
    "AggregationType": "Total",
    "Operator": "GreaterThan",
    "Threshold": 10,
    "EvaluationFrequency": "PT1M",
    "Severity": 1,
    "ActionGroups": ["chatbot-critical-alerts", "on-call-engineers"]
  },
  {
    "MetricName": "High P95 Dependency Latency Alert",
    "sourceQuery": "dependencies | where timestamp > ago(5m) | where name in ('get_weather_data', 'get_news_data', 'get_stock_data') | summarize p95_duration = percentile(duration, 95) by bin(timestamp, 1m)",
    "Measure": "p95_duration",
    "AggregationType": "Average",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 3000,
    "EvaluationFrequency": "PT1M",
    "Severity": 2,
    "ActionGroups": ["chatbot-performance-alerts", "platform-team"]
  },
  {
    "MetricName": "Low Intent Recognition Confidence Alert",
    "sourceQuery": "customMetrics | where name == 'nlp_confidence_scores' | where timestamp > ago(10m) | summarize avg_confidence = avg(value) by bin(timestamp, 5m)",
    "Measure": "avg_confidence",
    "AggregationType": "Average",
    "AggregationGranularity": "PT5M",
    "Operator": "LessThan",
    "Threshold": 0.6,
    "EvaluationFrequency": "PT5M",
    "Severity": 3,
    "ActionGroups": ["chatbot-quality-alerts", "ml-team"]
  },
  {
    "MetricName": "Health Check Failure Alert",
    "sourceQuery": "requests | where timestamp > ago(2m) | where name contains 'healthcheck' | summarize failure_count = countif(resultCode >= 400) by bin(timestamp, 1m)",
    "Measure": "failure_count",
    "AggregationType": "Total",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 0,
    "EvaluationFrequency": "PT1M",
    "Severity": 1,
    "ActionGroups": ["chatbot-critical-alerts", "on-call-engineers", "platform-team"]
  },
  {
    "MetricName": "Memory or Resource Exhaustion Alert",
    "sourceQuery": "requests | where timestamp > ago(5m) | where resultCode == 500 | where tostring(customDimensions.exception_type) contains 'Memory' or tostring(customDimensions.exception_type) contains 'Resource' | summarize resource_error_count = count() by bin(timestamp, 1m)",
    "Measure": "resource_error_count",
    "AggregationType": "Total",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 1,
    "EvaluationFrequency": "PT1M",
    "Severity": 1,
    "ActionGroups": ["chatbot-critical-alerts", "infrastructure-team"]
  },
  {
    "MetricName": "High Request Rate Alert",
    "sourceQuery": "requests | where timestamp > ago(5m) | where name !contains 'healthcheck' | summarize request_rate = count() by bin(timestamp, 1m)",
    "Measure": "request_rate",
    "AggregationType": "Average",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 1000,
    "EvaluationFrequency": "PT1M",
    "Severity": 2,
    "ActionGroups": ["chatbot-scaling-alerts", "platform-team"]
  },
  {
    "MetricName": "Dependency Timeout Alert",
    "sourceQuery": "dependencies | where timestamp > ago(5m) | where resultCode contains 'timeout' or duration > 30000 | summarize timeout_count = count() by bin(timestamp, 1m)",
    "Measure": "timeout_count",
    "AggregationType": "Total",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 5,
    "EvaluationFrequency": "PT1M",
    "Severity": 2,
    "ActionGroups": ["chatbot-dependency-alerts", "platform-team"]
  },
  {
    "MetricName": "Authentication/Authorization Failure Alert",
    "sourceQuery": "requests | where timestamp > ago(5m) | where resultCode in (401, 403) | summarize auth_failure_count = count() by bin(timestamp, 1m)",
    "Measure": "auth_failure_count",
    "AggregationType": "Total",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 10,
    "EvaluationFrequency": "PT1M",
    "Severity": 2,
    "ActionGroups": ["chatbot-security-alerts", "security-team"]
  },
  {
    "MetricName": "Custom Metric - Processing Time Anomaly",
    "sourceQuery": "customMetrics | where name == 'chatbot_processing_duration_seconds' | where timestamp > ago(10m) | summarize avg_processing_time = avg(value) by bin(timestamp, 2m)",
    "Measure": "avg_processing_time",
    "AggregationType": "Average",
    "AggregationGranularity": "PT2M",
    "Operator": "GreaterThan",
    "Threshold": 1.5,
    "EvaluationFrequency": "PT2M",
    "Severity": 3,
    "ActionGroups": ["chatbot-performance-alerts"]
  },
  {
    "MetricName": "Intent Recognition Failure Spike",
    "sourceQuery": "customMetrics | where name == 'chatbot_intents_recognized_total' | where timestamp > ago(5m) | extend intent = tostring(customDimensions.intent) | where intent == 'general' | summarize general_intent_count = sum(value) by bin(timestamp, 1m)",
    "Measure": "general_intent_count",
    "AggregationType": "Total",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 50,
    "EvaluationFrequency": "PT1M",
    "Severity": 3,
    "ActionGroups": ["chatbot-quality-alerts", "ml-team"]
  },
  {
    "MetricName": "Request Correlation Failure Alert",
    "sourceQuery": "requests | where timestamp > ago(5m) | where isempty(tostring(customDimensions.request_id)) | summarize uncorrelated_requests = count() by bin(timestamp, 1m)",
    "Measure": "uncorrelated_requests",
    "AggregationType": "Total",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 10,
    "EvaluationFrequency": "PT1M",
    "Severity": 3,
    "ActionGroups": ["chatbot-monitoring-alerts", "platform-team"]
  },
  {
    "MetricName": "Business Metric - User Satisfaction Drop",
    "sourceQuery": "customMetrics | where name == 'nlp_confidence_scores' | where timestamp > ago(30m) | extend intent = tostring(customDimensions.intent) | where intent != 'general' | summarize satisfied_interactions = countif(value >= 0.8), total_interactions = count() by bin(timestamp, 10m) | extend satisfaction_rate = todouble(satisfied_interactions) / todouble(total_interactions) * 100",
    "Measure": "satisfaction_rate",
    "AggregationType": "Average",
    "AggregationGranularity": "PT10M",
    "Operator": "LessThan",
    "Threshold": 70.0,
    "EvaluationFrequency": "PT10M",
    "Severity": 3,
    "ActionGroups": ["chatbot-business-alerts", "product-team", "ml-team"]
  },
  {
    "MetricName": "Application Restart/Crash Alert",
    "sourceQuery": "traces | where timestamp > ago(5m) | where message contains 'Application started' or message contains 'startup' | summarize restart_count = count() by bin(timestamp, 1m)",
    "Measure": "restart_count",
    "AggregationType": "Total",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 0,
    "EvaluationFrequency": "PT1M",
    "Severity": 2,
    "ActionGroups": ["chatbot-critical-alerts", "infrastructure-team"]
  },
  {
    "MetricName": "Database/Storage Connection Failure",
    "sourceQuery": "dependencies | where timestamp > ago(5m) | where type == 'SQL' or type == 'Azure blob' or type == 'Redis' | where success == false | summarize storage_failure_count = count() by bin(timestamp, 1m)",
    "Measure": "storage_failure_count",
    "AggregationType": "Total",
    "AggregationGranularity": "PT1M",
    "Operator": "GreaterThan",
    "Threshold": 3,
    "EvaluationFrequency": "PT1M",
    "Severity": 1,
    "ActionGroups": ["chatbot-critical-alerts", "database-team", "on-call-engineers"]
  }
]